参数传递：

double avg( const vector<int> & arr, int n, bool & errorFlag);
arr        使用 按常量引用调用（call by constan reference）
n          使用 按值调用 (call by value)
errorFlag  使用 引址调用 (call by reference) 

参数传递机制的选用可以通过以下两步来判断决定：
1）如果形参必须能够改变实参的值，那么就必须使用 引址调用;否则，实参值不能被形参改变
2）如果参数类型是简单类型，使用按值调用; 参数类型是类类型的，一般 按常量引用调用 来传递

参数传递选项总结如下：
1）按值调用        适用于 无需被函数更改的 小对象
2）按常量引用调用  适用于 无需被函数更改的 大对象
3）引址调用       适用于 需要被函数更改的 对象

返回值传递：
对象的返回也可以是 按值返回 和 按常量引用返回，多数情况下不要使用 引址返回

返回值的 按常量引用返回 :这里的常量(const)是指 返回的对象自身以后不能修改，
不同于参数里的const和访问函数里的const